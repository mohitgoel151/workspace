http://robertgreiner.com/2014/08/cap-theorem-revisited/


The CAP Theorem states that, in a distributed system (a collection of interconnected nodes that share data.), 
you can only have two out of the following three guarantees across a write/read pair: Consistency, Availability, 
and Partition Tolerance - one of them must be sacrificed.


Consistency - A read is guaranteed to return the most recent write for a given client.
Availability - A non-failing node will return a reasonable response within a reasonable amount of time (no error or timeout).
Partition Tolerance - The system will continue to function when network partitions occur.



Choose Consistency over Availability when your business requirements dictate atomic reads and writes.
Choose Availability over Consistency when your business requirements allow for some flexibility around when the data in the system synchronizes.
Availability is also a compelling option when the system needs to continue to function in spite of external errors (shopping carts, etc.)