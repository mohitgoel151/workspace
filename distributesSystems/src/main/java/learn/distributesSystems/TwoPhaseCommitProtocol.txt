https://en.wikipedia.org/wiki/Two-phase_commit_protocol

It is a distributed algorithm that coordinates all the processes that participate in a distributed 
atomic transaction on whether to commit or abort (roll back) the transaction 
(it is a specialized type of consensus protocol). 

The protocol achieves its goal even in many cases of temporary system failure (involving either process, network node, 
communication, etc. failures), and is thus widely used. However, it is not resilient 
to all possible failure configurations, and in rare cases, user (e.g., a system's administrator) 
intervention is needed to remedy an outcome. To accommodate recovery from failure (automatic in most cases) 
the protocol's participants use logging of the protocol's states. Log records, which are typically slow to 
generate but survive failures, are used by the protocol's recovery procedures. Many protocol variants exist 
that primarily differ in logging strategies and recovery mechanisms. Though usually intended to be used infrequently, 
recovery procedures compose a substantial portion of the protocol, due to many possible failure scenarios to be 
considered and supported by the protocol.



Coordinator                                         Cohort
                              QUERY TO COMMIT
                -------------------------------->
                              VOTE YES/NO           prepare*/abort*
                <-------------------------------
commit*/abort*                COMMIT/ROLLBACK
                -------------------------------->
                              ACKNOWLEDGMENT        commit*/abort*
                <--------------------------------  
end


Disadvantages
The greatest disadvantage of the two-phase commit protocol is that it is a blocking protocol. 
If the coordinator fails permanently, some cohorts will never resolve their transactions: 
After a cohort has sent an agreement message to the coordinator, it will block until a commit or rollback is received